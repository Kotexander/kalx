// extern printf(str, ...);

fun test(void) -> void {
    var a = 3;
    var b = 5;
    var c = a+b;
    var abc = a * c + b * c;

    printf("abc = %u\n", abc);
    if abc < 10 {
        printf("abc is greater then 10\n");
    }
    printf("\n");

    var s = "hi ";
    var i = 0;
    while i < 10 && i < 5 {
        printf(s);
        printf("loop %u\n", i);

        var j = 0;
        while j < 5 || j < 4 {
            printf("inner %u\n", j);
            j = j + 1;
        }

        i = i + 1;
    }

    var w = (((50 + 20) * (100 - 30)) + (500 - (25 * 2)) - (80 - 40));
    printf("w = %u\n", w);
    var x = 10;
    var y = 5;
    var z = x * ((y + 1) * 5) * y;
    var zdecl = "z = %u\n";
    printf(zdecl, z);
    // // exit(0);

    // return 0;
}

fun main(argc: u32, argv: [#str]) -> u8 {
    printf("num args: %u\n", argc);
    // printf("first arg: %s\n", @argv);

    var hello = "Hello world!";
    var bye = "Goodbye world!\n";
    printf("%s\n", hello);
    printf(bye);

    test();

    // var ptr = #abc;
    // var abc2 = @ptr;
    // var cdecl = "c = %u\n";
    // printf(cdecl, c);

    // test("test num: %u\n", 42);
    fibonacci(48);
}

fun fibonacci(i: u32) {
    // Fibonacci
    printf("\n\nFibonacci:\n");
    var fa = 0;
    var fb = 1;
    var fi = 0;
    while fi < i { 
        printf("%+2u: %u\n", fi+1, fa);
        var ft = fa + fb;
        fa = fb;
        fb = ft;
        fi = fi + 1;
    }
    // printf("\n\nFibonacci FOREVER:\n");
    // var fi = 0;
    // var fa = 0;
    // var fb = 1;
    // loop { 
    //     printf("%+2u: %u\n", fi+1, fa);
    //     var ft = fa + fb;
    //     fa = fb;
    //     fb = ft;
    //     fi = fi + 1;
    // }
}